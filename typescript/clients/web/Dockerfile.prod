# Build stage - Context should be the typescript/ directory
FROM node:23-slim AS builder

WORKDIR /app

# Install pnpm globally
RUN npm install -g pnpm@10.7.0 typescript@5.8.3

# ------------------------------
# 1. Copy lockfile & workspace config that affect dependency graph cache
# ------------------------------
COPY pnpm-lock.yaml* pnpm-workspace.yaml .npmrc ./
# Copy root package.json for pnpm workspace
COPY package.json ./
# Copy base TS configuration so that tsconfig.base.json can be resolved
COPY tsconfig.base.json ./

# ------------------------------
# 2. Copy all workspace package.json files (to maximise Docker cache)
# ------------------------------
COPY lib/ lib/
COPY clients/web/package.json ./clients/web/

# ------------------------------
# 3. Install deps based on the copied package.json set. Skip lifecycle scripts for now
#    because source files are not yet in the build context (they are copied in step 4).
#    This keeps the layer cache-friendly while avoiding prepare/postinstall failures.
# ------------------------------
RUN pnpm install --prefer-frozen-lockfile

# ------------------------------
# 4. Now copy the rest of the source code
# ------------------------------
COPY . .

# ------------------------------
# 5. Build every workspace package that provides a build script (recursive build)
# ------------------------------
RUN pnpm --filter vibekit-web-client... build

# Production stage
FROM node:23-slim AS production

# Copy pnpm config
COPY --from=builder /app/.npmrc ./

# Create a non-root user
RUN apt-get update && apt-get install -y --no-install-recommends dumb-init && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* && \
    groupadd -r ember && useradd -r -g ember ember

WORKDIR /app

# Install pnpm globally
RUN npm install -g pnpm@10.7.0

# Copy only what we need from the builder stage
# COPY --from=builder /app/clients/web/dist /app/clients/web/dist
# COPY --from=builder /app/clients/web/encyclopedia /app/clients/web/encyclopedia
COPY clients/web/package.json /app/clients/web/
COPY clients/web/node_modules /app/clients/web/node_modules
COPY clients/web/public ./app/clients/web/public
COPY clients/web/lib/ /app/clients/web/lib/
COPY --from=builder /app/clients/web/.next /app/clients/web/.next
COPY --from=builder /app/lib /app/lib
COPY --from=builder /app/node_modules /app/node_modules

# Change ownership to non-root user
RUN chown -R ember:ember /app

# Switch to non-root user
USER ember

# Expose port
EXPOSE 3000

# Start the client (path is relative to the WORKDIR set above)
CMD ["/bin/sh", "-c", "pnpm --filter vibekit-web-client... db:migrate && pnpm --filter vibekit-web-client... start"]